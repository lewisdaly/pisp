openapi: 3.0.0
info:
  title: OAuth API
  description: This is the documentation of the Zaikio OAuth API Endpoints.
  version: 1.0.0
servers:
  - url: 'https://hub.zaikio.com/oauth/'
    description: Production server (uses live data)
  - url: 'https://hub.sandbox.zaikio.com/oauth/'
    description: Sandbox server (uses test data)
tags:
  - name: OAuth
paths:
  /authorize:
    get:
      tags:
        - OAuth
      description: '[For more details read this guide](/guide/oauth/redirect-flow.html)'
      summary: Initialize Redirect Flow
      parameters:
        - name: client_id
          in: query
          required: true
          description: The client ID for your App as generated by the Directory.
          schema:
            type: string
        - name: redirect_uri
          in: query
          required: false
          description: >-
            The URL where users should be redirected by the Directory after
            authorisation is obtained. This URL needs to exactly match one of
            the URLs configured during App setup in the directory, it cannot
            contain any additional parameters. If omitted the user will be
            redirected to the first URL you specified during App setup.
          schema:
            type: string
          example: 'https://myapp.com/oauth2/connect-print/callback'
        - name: state
          in: query
          required: false
          description: >-
            You should set this parameter to a secure random string only known
            to your App, as a means of protection [against forgery
            attacks](https://security.stackexchange.com/questions/20187/oauth2-cross-site-request-forgery-and-state-parameter).
            This parameter can also contain any other arbitrary data. It will be
            reflected back to your App with the redirect after authorisation is
            obtained.
          schema:
            type: string
        - name: login
          in: query
          required: false
          description: >-
            If provided, this email address will be suggested as the users
            login.
          schema:
            type: string
          example: jane.doe@gmail.com
        - name: signup
          in: query
          required: false
          description: >-
            If omitted or set to `true`, the Directory will allow the user to
            create a new account during the authorisation process. If set to
            `false`, a signup is not possible.
          schema:
            type: string
            enum:
              - 'true'
              - 'false'
        - name: scope
          in: query
          description: >
            Comma separed list of requested scopes. More information in the
            [scope guides](/guide/oauth/scopes.html).
          schema:
            type: string
            example: 'Org.warehouse.items.r,Org.directory.machines.rw'
        - name: code_challenge_method
          in: query
          required: false
          description: >
            **Required for public clients such as Single Page Applications or
            mobile apps.** Method that is used to generate the challenge [More
            information here](/guide/oauth/redirect-flow.html#pkce)
          schema:
            type: string
            enum:
              - S256
              - plain
        - name: code_challenge
          in: query
          required: false
          description: >
            **Required for public clients such as Single Page Applications or
            mobile apps.** The actual code challenge [More information
            here](/guide/oauth/redirect-flow.html#pkce)
          schema:
            type: string
        - name: 'organization[name]'
          in: query
          required: false
          description: 'optional: suggested name for a new organization'
          schema:
            type: string
            example: My suggested name
        - name: 'organization[kinds]'
          in: query
          required: false
          description: 'optional: suggested kinds for a new organization'
          schema:
            type: array
            items:
              type: string
              example: printer
              enum:
                - printer
                - supplier
                - machine_vendor
                - brand_owner
                - designer
                - publisher
                - software_developer
                - other
        - name: 'organization[country_code]'
          in: query
          required: false
          description: 'optional: country of new organization'
          schema:
            example: DE
            type: string
        - name: 'person[first_name]'
          in: query
          required: false
          description: 'optional: suggested first name for a new person (sign up)'
          schema:
            type: string
            example: Suggested First Name
        - name: 'person[name]'
          in: query
          required: false
          description: 'optional: suggested name for a new person (sign up)'
          schema:
            type: string
            example: Suggested Name
        - name: 'person[email]'
          in: query
          required: false
          description: 'optional: suggested email for a new person (sign up)'
          schema:
            type: string
            format: email
            example: Suggested@email.com
      responses:
        '302':
          description: >
            After a user has successfully logged into the Directory and approved
            access for your App, the Directory will redirect the user back to
            your App, based on the `redirect_uri` specified in step 1 or in your
            App configuration. The redirect call will contain the `code`
            parameter which you need to exchange for an access token. It will
            also contain the `state` parameter from the previous step. You
            should use the `state` parameter to ensure that the request
            originated from your App. If the `state` doesn't match the process
            must be aborted.
          headers:
            Location:
              description: >-
                The given `redirect_uri` with the `code` parameter and
                optionally the `state` parameter
              schema:
                type: string
        '400': &ref_1
          description: OAuth Error
          content:
            application/json:
              example:
                error: invalid_request
                error_description: This app is required to use PKCE
              schema:
                type: object
                properties:
                  error:
                    type: string
                  error_description:
                    type: string
            application/xml:
              schema:
                type: object
                xml:
                  name: OAuth
                properties:
                  error:
                    type: string
                  error_description:
                    type: string
            text/html:
              schema:
                type: string
            text/plain:
              example: |-
                invalid_request
                This app is required to use PKCE
              schema:
                type: string
        '403':
          description: Is returned when the given parameters are invalid.
          content:
            text/plain:
              examples:
                client_id unknown:
                  value: 'error: This client is not known'
                invalid redirect_uri:
                  value: 'error: The redirect URI is unknown or malformed'
              schema:
                type: string
        '422':
          description: Is returned when the client parameter is missing.
          content:
            text/plain:
              schema:
                type: string
                example: 'error: The client ID parameter is missing'
  /access_token:
    post:
      tags:
        - OAuth
      summary: Create access token
      description: '[For more details read this guide](/guide/oauth/redirect-flow.html)'
      security:
        - bearerAuth: []
        - basicAuth: []
      parameters:
        - name: client_id
          description: >
            The client ID for your App as generated by the Directory. Required
            if basic auth was not used.
          in: query
          schema:
            type: string
        - name: client_secret
          description: >
            The client secret for your App as generated by the Directory.
            Required if basic auth was not used.
          in: query
          schema:
            type: string
        - name: code
          in: query
          description: >-
            The `code` parameter passed through GET `/oauth/authorize` (redirect
            flow)
          schema:
            type: string
        - name: code_verifier
          in: query
          required: false
          description: >
            **Required for public clients such as Single Page Applications or
            mobile apps.** The code verifier matching the previous code
            challenge [More information
            here](/guide/oauth/redirect-flow.html#pkce)
          schema:
            type: string
        - name: grant_type
          in: query
          description: >
            Depending on the flow you want to use, this might be different. By
            default, if no `grant_type` is provided, the redirect flow is used
            and a `code` needs to be provided. Please read the
            [guides](/guide/oauth/) for more information.
          schema:
            type: string
            enum:
              - 'urn:ietf:params:oauth:grant-type:device_code'
              - client_credentials
              - refresh_token
        - name: refresh_token
          in: query
          description: |
            Optional refresh token, only needed for grant_type refresh_token
          required: false
          schema:
            type: string
        - name: scope
          in: query
          description: |
            Scope, only needed for client_credentials flow
          required: false
          schema:
            type: string
            example: Org/33a2388b-80fe-41ce-a174-c97c5437a893.directory.organization.r
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: &ref_0
                type: object
                xml:
                  name: OAuth
                properties:
                  access_token:
                    type: string
                    example: 749ceefd1f7909a1773501e0bc57d5b2
                  refresh_token:
                    type: string
                    example: be4ae927cf49466293049c993ad911b2
                  token_type:
                    type: string
                    enum:
                      - bearer
                    example: bearer
                  scope:
                    type: string
                    example: 'warehouse.items.r,directory.machines.rw'
                  audiences:
                    type: array
                    example:
                      - warehouse
                      - directory
                    items:
                      type: string
                  expires_in:
                    type: integer
                    description: Time in seconds
                  bearer:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        example: b1475f65-236c-58b8-96e1-e1778b43beb7
                      type:
                        type: string
                        example: Organization
                        enum:
                          - Person
                          - Organization
              example:
                access_token: >-
                  eyJraWQiOiJhNmE1MzFjMGZhZTVlNWE1MDAzZDI2ZTRhMTIwMmIwNjg2ZDFkNTRjNGZhYTViZDlkZTBjMzdkY2JkY2RkYzdlIiwiYWxnIjoiUlMyNTYifQ.eyJpc3MiOiJaQUkiLCJzdWIiOiJQZXJzb24vMzgzNjYzYmMtMTQ5YS01Yjc2LWI1MGQtZWUwMzkwNDZjMTJlIiwiYXVkIjpbImtleWxpbmUiXSwianRpIjoiMTg4ZmZiOTMtYTFlYS00MjAxLThhYWMtMTVjYWQwNWZlZDY2IiwibmJmIjoxNTg0NDYxMjIzLCJleHAiOjE1ODQ0NjQ4MjMsImprdSI6Imh0dHBzOi8vd3d3LmV4YW1wbGUuY29tL2FwaS92MS9qd3RfcHVibGljX2tleXMiLCJzY29wZSI6WyJkaXJlY3RvcnkuZGVsZWdhdGlvbnMucnciLCJkaXJlY3RvcnkubWFjaGluZXMucnciLCJkaXJlY3RvcnkucGVyc29uLnIiLCJ3YXJlaG91c2UuaXRlbXMucnciXX0.rSrTkYLKOqx0XZNB9iT5yLhqnE6jsc4214ju3Bp1m6lf5QBSI8PMJiHgTz5kAQAdXpFbCrU45WvZS1rx-bEHGQaIXU8IUumUsFQy45_dI3lBBuc3WdrisZKyRUU4ZtaETRA-V8pbOWtK4Cygyz5KFo69IPa8YSN_yJ4XTF9VEShaYHnYWC5VYkv8qhvRcxbecCt27aVIobFeksfWBgNk4KFNAOHB-0XKG10PBoc1bECFTHhz4ateIZbZUYmQlgSjDPB5dZgeA2l7OZhscR0q1W87kihl0Xeqm3MtvHUW2BuM_vkLxbO05QhuC5C5Y4zb9qcRIGkQCchgdWBgOQ9q4w
                token_type: bearer
                scope: >-
                  directory.delegations.rw,directory.machines.rw,directory.person.r,warehouse.items.rw
                refresh_token: TWyEY5PJAGjqrJDN2nYz8Dk7
                expires_in: 3599
                audiences:
                  - keyline
                bearer:
                  id: 383663bc-149a-5b76-b50d-ee039046c12e
                  type: Person
            text/xml:
              schema: *ref_0
            text/plain:
              schema:
                type: string
              example: access_token=749ceefd1f7909a1773501e0bc57d5b2&token_type=bearer
        '400': *ref_1
        '403': *ref_1
        '404': *ref_1
        '422': *ref_1
  /device_authorizations/authorize:
    post:
      tags:
        - OAuth
      description: '[For more details read this guide](/guide/oauth/device-flow.html)'
      summary: Initialize Device Flow
      parameters:
        - name: client_id
          in: query
          required: true
          description: The client ID for your App as generated by the Directory.
          schema:
            type: string
        - name: scope
          in: query
          description: >
            Comma separed list of requested scopes. More information in the
            [scope guides](/guide/oauth/scopes.html).
          schema:
            type: string
            example: 'Org.warehouse.items.r,Org.directory.machines.rw'
        - name: 'organization[name]'
          in: query
          required: false
          description: 'optional: suggested name for a new organization'
          schema:
            type: string
            example: My suggested name
        - name: 'organization[kind]'
          in: query
          required: false
          description: 'optional: kind of new organization'
          schema:
            type: string
            example: printer
            enum:
              - printer
              - publisher
              - software_vendor
              - developer
              - other
        - name: 'organization[country_code]'
          in: query
          required: false
          description: 'optional: country of new organization'
          schema:
            example: DE
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: &ref_5
                type: object
                xml: &ref_2
                  name: OAuth
                required: &ref_3
                  - device_code
                  - user_code
                  - verification_uri
                  - verification_uri_complete
                  - expires_in
                  - interval
                  - created_at
                properties: &ref_4
                  device_code:
                    type: string
                    example: pX27zsMN2ViQKta1bGfLmVJE
                  user_code:
                    type: string
                    example: AGHI-COPQ
                  verification_uri:
                    type: string
                    format: uri
                    example: 'http://www.example.com/oauth/device_authorizations/verify'
                  verification_uri_complete:
                    type: string
                    format: uri
                    example: >-
                      http://www.example.com/oauth/device_authorizations/verify?code=AGHI-COPQ
                  expires_in:
                    type: string
                    format: date-time
                  interval:
                    type: integer
                    example: 5
                    description: Expritation interval in minutes
                  created_at:
                    type: string
                    format: date-time
            text/xml:
              schema:
                type: object
                xml: *ref_2
                required: *ref_3
                properties: *ref_4
            text/plain:
              schema:
                type: string
                example: >-
                  device_code=pX27zsMN2ViQKta1bGfLmVJE&user_code=AGHI-COPQ&verification_uri=http://www.example.com/oauth/device_authorizations/verify&verification_uri_complete=http://www.example.com/oauth/device_authorizations/verify?code=AGHI-COPQ&expires_in=2019-11-11T11:05:43.339Z&interval=5
        '422':
          description: Is returned when the client parameter is missing.
          content:
            text/plain:
              schema:
                type: string
                example: 'error: The client ID parameter is missing'
  /delegate:
    post:
      tags:
        - OAuth
      summary: Create delegation access token
      description: >-
        Creates access token for subsystems [For more details read this
        guide](/guide/oauth/delegate-access.html)
      security:
        - bearerAuth: []
      parameters:
        - name: client_id
          required: true
          description: >
            The client ID of the subsystem for your App as generated by the
            Directory.
          in: query
          schema:
            type: string
        - name: delegate_access_scope
          in: query
          description: >
            Comma separed list of requested scopes, has to be a subset of parent
            access token's scopes. More information in the [scope
            guides](/guide/oauth/scopes.html).
          schema:
            type: string
            example: 'Org.warehouse.items.r,Org.directory.machines.rw'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: *ref_0
              example:
                access_token: >-
                  eyJraWQiOiJhNmE1MzFjMGZhZTVlNWE1MDAzZDI2ZTRhMTIwMmIwNjg2ZDFkNTRjNGZhYTViZDlkZTBjMzdkY2JkY2RkYzdlIiwiYWxnIjoiUlMyNTYifQ.eyJpc3MiOiJaQUkiLCJzdWIiOiJQZXJzb24vMzgzNjYzYmMtMTQ5YS01Yjc2LWI1MGQtZWUwMzkwNDZjMTJlIiwiYXVkIjpbIndhcmVob3VzZSJdLCJqdGkiOiIwNzYzZTg0Ny1kZWNmLTQ3NjctOTVhOS0zNTNhNDA1YjcyZjEiLCJuYmYiOjE1ODQ0NjEwMTksImV4cCI6MTU4NDQ2MTYxOSwiamt1IjoiaHR0cHM6Ly93d3cuZXhhbXBsZS5jb20vYXBpL3YxL2p3dF9wdWJsaWNfa2V5cyIsInNjb3BlIjpbImRpcmVjdG9yeS5wZXJzb24uciIsIndhcmVob3VzZS5pdGVtcy5yIl19.WqZamA5gV7oh-UshjwDLNdQmjl8rau15cQo8Hok_vWLnK_t3lHcdHsz-q0koGrZHQ-DAc13zy9dDqKSmqkGwS3uwIpIUqA6p6lJw6dQkxtIbsVNSdEEVltqbi_xus7hU_aPAtTYSDOfuDNZVYsbC5B-ixTY8pJyI0nADx28fgXoc3u-uq0NE35GRF5SGjCYgJ1AWNzY9KyWQGo3iuQaqZuF6VqTqpaQx0ISLArU5Hgh9ej0r1wV4-0CspsDwBDoWgqjiOvcFeXoOZTh_kCk-nHoO9NWWUMPX-J2diRmMvupOxVatTCCmtNg2M0IsyOTbYhD_KavGk-Z_YuCMgH7B2Q
                token_type: bearer
                scope: 'directory.person.r,warehouse.items.r'
                refresh_token: fTW6oamhnzbkkkHTojSX8XpV
                expires_in: 599
                audiences:
                  - warehouse
                bearer:
                  id: 383663bc-149a-5b76-b50d-ee039046c12e
                  type: Person
            text/xml:
              schema: *ref_0
            text/plain:
              schema:
                type: string
              example: access_token=749ceefd1f7909a1773501e0bc57d5b2&token_type=bearer
        '400': *ref_1
        '401': *ref_1
        '404': *ref_1
        '422': *ref_1
components:
  schemas:
    AccessToken: *ref_0
    DeviceAuthorization: *ref_5
  responses:
    OAuthError: *ref_1
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    basicAuth:
      type: http
      scheme: basic
      description: >
        the username is the app's `OAuth client ID` and the password is the
        app's `OAuth client secret`. Needed for refresh token and client
        credentials flow.
